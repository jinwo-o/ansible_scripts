// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddPatientOKCode is the HTTP code returned for type AddPatientOK
const AddPatientOKCode int = 200

/*AddPatientOK id

swagger:response addPatientOK
*/
type AddPatientOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewAddPatientOK creates AddPatientOK with default headers values
func NewAddPatientOK() *AddPatientOK {
	return &AddPatientOK{}
}

// WithPayload adds the payload to the add patient o k response
func (o *AddPatientOK) WithPayload(payload string) *AddPatientOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add patient o k response
func (o *AddPatientOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddPatientOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// AddPatientBadRequestCode is the HTTP code returned for type AddPatientBadRequest
const AddPatientBadRequestCode int = 400

/*AddPatientBadRequest invalid input, object invalid

swagger:response addPatientBadRequest
*/
type AddPatientBadRequest struct {
}

// NewAddPatientBadRequest creates AddPatientBadRequest with default headers values
func NewAddPatientBadRequest() *AddPatientBadRequest {
	return &AddPatientBadRequest{}
}

// WriteResponse to the client
func (o *AddPatientBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddPatientConflictCode is the HTTP code returned for type AddPatientConflict
const AddPatientConflictCode int = 409

/*AddPatientConflict an existing item already exists

swagger:response addPatientConflict
*/
type AddPatientConflict struct {
}

// NewAddPatientConflict creates AddPatientConflict with default headers values
func NewAddPatientConflict() *AddPatientConflict {
	return &AddPatientConflict{}
}

// WriteResponse to the client
func (o *AddPatientConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
