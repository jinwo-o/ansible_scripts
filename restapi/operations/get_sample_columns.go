package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetSampleColumnsHandlerFunc turns a function with the right signature into a get sample columns handler
type GetSampleColumnsHandlerFunc func(GetSampleColumnsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSampleColumnsHandlerFunc) Handle(params GetSampleColumnsParams) middleware.Responder {
	return fn(params)
}

// GetSampleColumnsHandler interface for that can handle valid get sample columns params
type GetSampleColumnsHandler interface {
	Handle(GetSampleColumnsParams) middleware.Responder
}

// NewGetSampleColumns creates a new http.Handler for the get sample columns operation
func NewGetSampleColumns(ctx *middleware.Context, handler GetSampleColumnsHandler) *GetSampleColumns {
	return &GetSampleColumns{Context: ctx, Handler: handler}
}

/*GetSampleColumns swagger:route GET /columns getSampleColumns

gets columns

gets column names

*/
type GetSampleColumns struct {
	Context *middleware.Context
	Handler GetSampleColumnsHandler
}

func (o *GetSampleColumns) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	rw.Header().Set("Access-Control-Allow-Origin", "*")
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSampleColumnsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
