package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

// FlatSwaggerJSON is the exact same
var FlatSwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Metadata API",
    "title": "Jtree Metadata API",
    "contact": {
      "email": "info@distributedgenomics.ca"
    },
    "license": {
      "name": "GPL",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    },
    "version": "0.1.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/Jtree/metadata/0.1.0",
  "paths": {
    "/columns": {
      "get": {
        "description": "gets column names",
        "produces": [
          "application/json"
        ],
        "summary": "gets columns",
        "operationId": "getSampleColumns",
        "responses": {
          "200": {
            "description": "columns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/experiment": {
      "post": {
        "description": "Adds an experiment to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds an experiment item",
        "operationId": "addExperiment",
        "parameters": [
          {
            "description": "Experiment",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "logs users out",
        "produces": [
          "application/json"
        ],
        "summary": "logsout",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "404": {
            "description": "Sample not found"
          }
        }
      }
    },
    "/patient": {
      "post": {
        "description": "Adds a patient to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a patient item",
        "operationId": "addPatient",
        "parameters": [
          {
            "description": "Patient",
            "name": "patient",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Query for Sample",
        "operationId": "getSamplesByQuery",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          },
          "404": {
            "description": "Sample not found"
          }
        }
      }
    },
    "/result": {
      "post": {
        "description": "Adds a result to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a result item",
        "operationId": "addResult",
        "parameters": [
          {
            "description": "Result",
            "name": "result",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/resultdetails": {
      "post": {
        "description": "Adds a resultdetails to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a resultdetails item",
        "operationId": "addResultdetails",
        "parameters": [
          {
            "description": "Resultdetails",
            "name": "resultdetails",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Resultdetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/sample": {
      "post": {
        "description": "Adds a sample to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a sample",
        "operationId": "addSample",
        "parameters": [
          {
            "description": "Sample",
            "name": "sample",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/searchable": {
      "get": {
        "description": "gets searchable",
        "produces": [
          "application/json"
        ],
        "summary": "gets columns",
        "operationId": "getSearchable",
        "responses": {
          "200": {
            "description": "columns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/uneditable": {
      "get": {
        "description": "gets uneditable",
        "produces": [
          "application/json"
        ],
        "summary": "gets columns",
        "operationId": "getUneditable",
        "responses": {
          "200": {
            "description": "columns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Uploads a file.",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "404": {
            "description": "File not found"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions": {
    "Experiment": {
      "type": "object",
      "properties": {
        "chip_cartridge_barcode": {
          "type": "string",
          "x-go-custom-tag": "db:\"chip_cartridge_barcode\"",
          "x-nullable": true
        },
        "complete_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"complete_date\"",
          "x-nullable": true
        },
        "experiment_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"experiment_id\"",
          "x-nullable": true
        },
        "has_project_files": {
          "type": "boolean",
          "x-go-custom-tag": "db:\"has_project_files\"",
          "x-nullable": true
        },
        "opened_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"opened_date\"",
          "x-nullable": true
        },
        "panel_assay_screened": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"panel_assay_screened\"",
          "x-nullable": true
        },
        "pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"pcr\"",
          "x-nullable": true
        },
        "priority": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"priority\"",
          "x-nullable": true
        },
        "procedure_order_datetime": {
          "type": "string",
          "x-go-custom-tag": "db:\"procedure_order_datetime\"",
          "x-nullable": true
        },
        "project_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"project_id\"",
          "x-nullable": true
        },
        "project_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"project_name\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "study_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"study_id\"",
          "x-nullable": true
        },
        "test_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"test_date\"",
          "x-nullable": true
        }
      }
    },
    "Patient": {
      "type": "object",
      "properties": {
        "clinical_history": {
          "type": "string",
          "x-go-custom-tag": "db:\"clinical_history\"",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_received\"",
          "x-nullable": true
        },
        "date_reported": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_reported\"",
          "x-nullable": true
        },
        "dob": {
          "type": "string",
          "x-go-custom-tag": "db:\"dob\"",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"first_name\"",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "x-go-custom-tag": "db:\"gender\"",
          "x-nullable": true
        },
        "initials": {
          "type": "string",
          "x-go-custom-tag": "db:\"initials\"",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"last_name\"",
          "x-nullable": true
        },
        "mrn": {
          "type": "string",
          "x-go-custom-tag": "db:\"mrn\"",
          "x-nullable": true
        },
        "on_hcn": {
          "type": "string",
          "x-go-custom-tag": "db:\"on_hcn\"",
          "x-nullable": true
        },
        "patient_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"patient_id\"",
          "x-nullable": true
        },
        "patient_type": {
          "type": "string",
          "x-go-custom-tag": "db:\"patient_type\"",
          "x-nullable": true
        },
        "referring_physician": {
          "type": "string",
          "x-go-custom-tag": "db:\"referring_physician\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"se_num\"",
          "x-nullable": true
        },
        "surgical_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"surgical_date\"",
          "x-nullable": true
        }
      }
    },
    "Query": {
      "type": "object",
      "properties": {
        "selected_condition": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "selected_fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selected_tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Record": {
      "type": "object",
      "properties": {
        "Experiment": {
          "$ref": "#/definitions/Experiment"
        },
        "Patient": {
          "$ref": "#/definitions/Patient"
        },
        "Result": {
          "$ref": "#/definitions/Result"
        },
        "Resultdetails": {
          "$ref": "#/definitions/Resultdetails"
        },
        "Sample": {
          "$ref": "#/definitions/Sample"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "failed_regions": {
          "type": "string",
          "x-go-custom-tag": "db:\"failed_regions\"",
          "x-nullable": true
        },
        "mean_depth_of_coveage": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"mean_depth_of_coveage\"",
          "x-nullable": true
        },
        "mlpa_pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"mlpa_pcr\"",
          "x-nullable": true
        },
        "mutation": {
          "type": "string",
          "x-go-custom-tag": "db:\"mutation\"",
          "x-nullable": true
        },
        "overall_hotspots_threshold": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"overall_hotspots_threshold\"",
          "x-nullable": true
        },
        "overall_quality_threshold": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"overall_quality_threshold\"",
          "x-nullable": true
        },
        "results_id": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"results_id\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "uid": {
          "type": "string",
          "x-go-custom-tag": "db:\"uid\"",
          "x-nullable": true
        },
        "verification_pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"verification_pcr\"",
          "x-nullable": true
        }
      }
    },
    "Resultdetails": {
      "type": "object",
      "properties": {
        "VAF": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"VAF\"",
          "x-nullable": true
        },
        "c_nomenclature": {
          "type": "string",
          "x-go-custom-tag": "db:\"c_nomenclature\"",
          "x-nullable": true
        },
        "coverage": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"coverage\"",
          "x-nullable": true
        },
        "exon": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"exon\"",
          "x-nullable": true
        },
        "gene": {
          "type": "string",
          "x-go-custom-tag": "db:\"gene\"",
          "x-nullable": true
        },
        "p_nomenclature": {
          "type": "string",
          "x-go-custom-tag": "db:\"p_nomenclature\"",
          "x-nullable": true
        },
        "pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"pcr\"",
          "x-nullable": true
        },
        "quality_score": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"quality_score\"",
          "x-nullable": true
        },
        "result": {
          "type": "string",
          "x-go-custom-tag": "db:\"result\"",
          "x-nullable": true
        },
        "results_details_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"results_details_id\"",
          "x-nullable": true
        },
        "results_id": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"results_id\"",
          "x-nullable": true
        },
        "risk_score": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"risk_score\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "uid": {
          "type": "string",
          "x-go-custom-tag": "db:\"uid\"",
          "x-nullable": true
        }
      }
    },
    "Sample": {
      "type": "object",
      "properties": {
        "cf_plasma_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"cf_plasma_location\"",
          "x-nullable": true
        },
        "comments": {
          "type": "string",
          "x-go-custom-tag": "db:\"comments\"",
          "x-nullable": true
        },
        "container_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_id\"",
          "x-nullable": true
        },
        "container_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_name\"",
          "x-nullable": true
        },
        "container_type": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_type\"",
          "x-nullable": true
        },
        "container_well": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_well\"",
          "x-nullable": true
        },
        "copath_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"copath_num\"",
          "x-nullable": true
        },
        "date_collected": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_collected\"",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_received\"",
          "x-nullable": true
        },
        "date_submitted": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_submitted\"",
          "x-nullable": true
        },
        "delta_ct_Value": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"delta_ct_Value\"",
          "x-nullable": true
        },
        "dna_concentration": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"dna_concentration\"",
          "x-nullable": true
        },
        "dna_extraction_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_extraction_date\"",
          "x-nullable": true
        },
        "dna_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_location\"",
          "x-nullable": true
        },
        "dna_quality": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_quality\"",
          "x-nullable": true
        },
        "dna_quality_by_rnase_p": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"dna_quality_by_rnase_p\"",
          "x-nullable": true
        },
        "dna_sample_barcode": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_sample_barcode\"",
          "x-nullable": true
        },
        "dna_volume": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"dna_volume\"",
          "x-nullable": true
        },
        "facility": {
          "type": "string",
          "x-go-custom-tag": "db:\"facility\"",
          "x-nullable": true
        },
        "ffpe_qc_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"ffpe_qc_date\"",
          "x-nullable": true
        },
        "h_e_slide_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"h_e_slide_location\"",
          "x-nullable": true
        },
        "has_sample_files": {
          "type": "boolean",
          "x-go-custom-tag": "db:\"has_sample_files\"",
          "x-nullable": true
        },
        "historical_diagnosis": {
          "type": "string",
          "x-go-custom-tag": "db:\"historical_diagnosis\"",
          "x-nullable": true
        },
        "material_received": {
          "type": "string",
          "x-go-custom-tag": "db:\"material_received\"",
          "x-nullable": true
        },
        "material_received_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"material_received_num\"",
          "x-nullable": true
        },
        "material_received_other": {
          "type": "string",
          "x-go-custom-tag": "db:\"material_received_other\"",
          "x-nullable": true
        },
        "name_of_requestor": {
          "type": "string",
          "x-go-custom-tag": "db:\"name_of_requestor\"",
          "x-nullable": true
        },
        "non_uhn_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"non_uhn_id\"",
          "x-nullable": true
        },
        "other_identifier": {
          "type": "string",
          "x-go-custom-tag": "db:\"other_identifier\"",
          "x-nullable": true
        },
        "pb_bm_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"pb_bm_location\"",
          "x-nullable": true
        },
        "plasma_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"plasma_location\"",
          "x-nullable": true
        },
        "reviewed_by": {
          "type": "string",
          "x-go-custom-tag": "db:\"reviewed_by\"",
          "x-nullable": true
        },
        "rna_concentration": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"rna_concentration\"",
          "x-nullable": true
        },
        "rna_extraction_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"rna_extraction_date\"",
          "x-nullable": true
        },
        "rna_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"rna_location\"",
          "x-nullable": true
        },
        "rna_lysate_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"rna_lysate_location\"",
          "x-nullable": true
        },
        "rna_quality": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"rna_quality\"",
          "x-nullable": true
        },
        "rna_volume": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"rna_volume\"",
          "x-nullable": true
        },
        "rnase_p_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"rnase_p_date\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "sample_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_name\"",
          "x-nullable": true
        },
        "sample_size": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_size\"",
          "x-nullable": true
        },
        "sample_type": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_type\"",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"se_num\"",
          "x-nullable": true
        },
        "study_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"study_id\"",
          "x-nullable": true
        },
        "surgical_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"surgical_num\"",
          "x-nullable": true
        },
        "test_requested": {
          "type": "string",
          "x-go-custom-tag": "db:\"test_requested\"",
          "x-nullable": true
        },
        "tumor_percnt_of_circled": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"tumor_percnt_of_circled\"",
          "x-nullable": true
        },
        "tumor_percnt_of_total": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"tumor_percnt_of_total\"",
          "x-nullable": true
        },
        "tumor_site": {
          "type": "string",
          "x-go-custom-tag": "db:\"tumor_site\"",
          "x-nullable": true
        },
        "volume_of_blood_marrow": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"volume_of_blood_marrow\"",
          "x-nullable": true
        },
        "wbc_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"wbc_location\"",
          "x-nullable": true
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Metadata API",
    "title": "Jtree Metadata API",
    "contact": {
      "email": "info@distributedgenomics.ca"
    },
    "license": {
      "name": "GPL",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    },
    "version": "0.1.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/Jtree/metadata/0.1.0",
  "paths": {
    "/columns": {
      "get": {
        "description": "gets column names",
        "produces": [
          "application/json"
        ],
        "summary": "gets columns",
        "operationId": "getSampleColumns",
        "responses": {
          "200": {
            "description": "columns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/experiment": {
      "post": {
        "description": "Adds an experiment to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds an experiment item",
        "operationId": "addExperiment",
        "parameters": [
          {
            "description": "Experiment",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "logs users out",
        "produces": [
          "application/json"
        ],
        "summary": "logsout",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "404": {
            "description": "Sample not found"
          }
        }
      }
    },
    "/patient": {
      "post": {
        "description": "Adds a patient to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a patient item",
        "operationId": "addPatient",
        "parameters": [
          {
            "description": "Patient",
            "name": "patient",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Query for Sample",
        "operationId": "getSamplesByQuery",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          },
          "404": {
            "description": "Sample not found"
          }
        }
      }
    },
    "/result": {
      "post": {
        "description": "Adds a result to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a result item",
        "operationId": "addResult",
        "parameters": [
          {
            "description": "Result",
            "name": "result",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/resultdetails": {
      "post": {
        "description": "Adds a resultdetails to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a resultdetails item",
        "operationId": "addResultdetails",
        "parameters": [
          {
            "description": "Resultdetails",
            "name": "resultdetails",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Resultdetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/sample": {
      "post": {
        "description": "Adds a sample to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a sample",
        "operationId": "addSample",
        "parameters": [
          {
            "description": "Sample",
            "name": "sample",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/searchable": {
      "get": {
        "description": "gets searchable",
        "produces": [
          "application/json"
        ],
        "summary": "gets columns",
        "operationId": "getSearchable",
        "responses": {
          "200": {
            "description": "columns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/uneditable": {
      "get": {
        "description": "gets uneditable",
        "produces": [
          "application/json"
        ],
        "summary": "gets columns",
        "operationId": "getUneditable",
        "responses": {
          "200": {
            "description": "columns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Uploads a file.",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "upfile",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "404": {
            "description": "File not found"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    }
  },
  "definitions": {
    "Experiment": {
      "type": "object",
      "properties": {
        "chip_cartridge_barcode": {
          "type": "string",
          "x-go-custom-tag": "db:\"chip_cartridge_barcode\"",
          "x-nullable": true
        },
        "complete_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"complete_date\"",
          "x-nullable": true
        },
        "experiment_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"experiment_id\"",
          "x-nullable": true
        },
        "has_project_files": {
          "type": "boolean",
          "x-go-custom-tag": "db:\"has_project_files\"",
          "x-nullable": true
        },
        "opened_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"opened_date\"",
          "x-nullable": true
        },
        "panel_assay_screened": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"panel_assay_screened\"",
          "x-nullable": true
        },
        "pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"pcr\"",
          "x-nullable": true
        },
        "priority": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"priority\"",
          "x-nullable": true
        },
        "procedure_order_datetime": {
          "type": "string",
          "x-go-custom-tag": "db:\"procedure_order_datetime\"",
          "x-nullable": true
        },
        "project_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"project_id\"",
          "x-nullable": true
        },
        "project_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"project_name\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "study_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"study_id\"",
          "x-nullable": true
        },
        "test_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"test_date\"",
          "x-nullable": true
        }
      }
    },
    "Patient": {
      "type": "object",
      "properties": {
        "clinical_history": {
          "type": "string",
          "x-go-custom-tag": "db:\"clinical_history\"",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_received\"",
          "x-nullable": true
        },
        "date_reported": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_reported\"",
          "x-nullable": true
        },
        "dob": {
          "type": "string",
          "x-go-custom-tag": "db:\"dob\"",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"first_name\"",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "x-go-custom-tag": "db:\"gender\"",
          "x-nullable": true
        },
        "initials": {
          "type": "string",
          "x-go-custom-tag": "db:\"initials\"",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"last_name\"",
          "x-nullable": true
        },
        "mrn": {
          "type": "string",
          "x-go-custom-tag": "db:\"mrn\"",
          "x-nullable": true
        },
        "on_hcn": {
          "type": "string",
          "x-go-custom-tag": "db:\"on_hcn\"",
          "x-nullable": true
        },
        "patient_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"patient_id\"",
          "x-nullable": true
        },
        "patient_type": {
          "type": "string",
          "x-go-custom-tag": "db:\"patient_type\"",
          "x-nullable": true
        },
        "referring_physician": {
          "type": "string",
          "x-go-custom-tag": "db:\"referring_physician\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"se_num\"",
          "x-nullable": true
        },
        "surgical_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"surgical_date\"",
          "x-nullable": true
        }
      }
    },
    "Query": {
      "type": "object",
      "properties": {
        "selected_condition": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "selected_fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selected_tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Record": {
      "type": "object",
      "properties": {
        "Experiment": {
          "$ref": "#/definitions/Experiment"
        },
        "Patient": {
          "$ref": "#/definitions/Patient"
        },
        "Result": {
          "$ref": "#/definitions/Result"
        },
        "Resultdetails": {
          "$ref": "#/definitions/Resultdetails"
        },
        "Sample": {
          "$ref": "#/definitions/Sample"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "failed_regions": {
          "type": "string",
          "x-go-custom-tag": "db:\"failed_regions\"",
          "x-nullable": true
        },
        "mean_depth_of_coveage": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"mean_depth_of_coveage\"",
          "x-nullable": true
        },
        "mlpa_pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"mlpa_pcr\"",
          "x-nullable": true
        },
        "mutation": {
          "type": "string",
          "x-go-custom-tag": "db:\"mutation\"",
          "x-nullable": true
        },
        "overall_hotspots_threshold": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"overall_hotspots_threshold\"",
          "x-nullable": true
        },
        "overall_quality_threshold": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"overall_quality_threshold\"",
          "x-nullable": true
        },
        "results_id": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"results_id\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "uid": {
          "type": "string",
          "x-go-custom-tag": "db:\"uid\"",
          "x-nullable": true
        },
        "verification_pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"verification_pcr\"",
          "x-nullable": true
        }
      }
    },
    "Resultdetails": {
      "type": "object",
      "properties": {
        "VAF": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"VAF\"",
          "x-nullable": true
        },
        "c_nomenclature": {
          "type": "string",
          "x-go-custom-tag": "db:\"c_nomenclature\"",
          "x-nullable": true
        },
        "coverage": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"coverage\"",
          "x-nullable": true
        },
        "exon": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"exon\"",
          "x-nullable": true
        },
        "gene": {
          "type": "string",
          "x-go-custom-tag": "db:\"gene\"",
          "x-nullable": true
        },
        "p_nomenclature": {
          "type": "string",
          "x-go-custom-tag": "db:\"p_nomenclature\"",
          "x-nullable": true
        },
        "pcr": {
          "type": "string",
          "x-go-custom-tag": "db:\"pcr\"",
          "x-nullable": true
        },
        "quality_score": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"quality_score\"",
          "x-nullable": true
        },
        "result": {
          "type": "string",
          "x-go-custom-tag": "db:\"result\"",
          "x-nullable": true
        },
        "results_details_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"results_details_id\"",
          "x-nullable": true
        },
        "results_id": {
          "type": "number",
          "format": "int",
          "x-go-custom-tag": "db:\"results_id\"",
          "x-nullable": true
        },
        "risk_score": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"risk_score\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "uid": {
          "type": "string",
          "x-go-custom-tag": "db:\"uid\"",
          "x-nullable": true
        }
      }
    },
    "Sample": {
      "type": "object",
      "properties": {
        "cf_plasma_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"cf_plasma_location\"",
          "x-nullable": true
        },
        "comments": {
          "type": "string",
          "x-go-custom-tag": "db:\"comments\"",
          "x-nullable": true
        },
        "container_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_id\"",
          "x-nullable": true
        },
        "container_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_name\"",
          "x-nullable": true
        },
        "container_type": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_type\"",
          "x-nullable": true
        },
        "container_well": {
          "type": "string",
          "x-go-custom-tag": "db:\"container_well\"",
          "x-nullable": true
        },
        "copath_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"copath_num\"",
          "x-nullable": true
        },
        "date_collected": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_collected\"",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_received\"",
          "x-nullable": true
        },
        "date_submitted": {
          "type": "string",
          "x-go-custom-tag": "db:\"date_submitted\"",
          "x-nullable": true
        },
        "delta_ct_Value": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"delta_ct_Value\"",
          "x-nullable": true
        },
        "dna_concentration": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"dna_concentration\"",
          "x-nullable": true
        },
        "dna_extraction_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_extraction_date\"",
          "x-nullable": true
        },
        "dna_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_location\"",
          "x-nullable": true
        },
        "dna_quality": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_quality\"",
          "x-nullable": true
        },
        "dna_quality_by_rnase_p": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"dna_quality_by_rnase_p\"",
          "x-nullable": true
        },
        "dna_sample_barcode": {
          "type": "string",
          "x-go-custom-tag": "db:\"dna_sample_barcode\"",
          "x-nullable": true
        },
        "dna_volume": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"dna_volume\"",
          "x-nullable": true
        },
        "facility": {
          "type": "string",
          "x-go-custom-tag": "db:\"facility\"",
          "x-nullable": true
        },
        "ffpe_qc_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"ffpe_qc_date\"",
          "x-nullable": true
        },
        "h_e_slide_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"h_e_slide_location\"",
          "x-nullable": true
        },
        "has_sample_files": {
          "type": "boolean",
          "x-go-custom-tag": "db:\"has_sample_files\"",
          "x-nullable": true
        },
        "historical_diagnosis": {
          "type": "string",
          "x-go-custom-tag": "db:\"historical_diagnosis\"",
          "x-nullable": true
        },
        "material_received": {
          "type": "string",
          "x-go-custom-tag": "db:\"material_received\"",
          "x-nullable": true
        },
        "material_received_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"material_received_num\"",
          "x-nullable": true
        },
        "material_received_other": {
          "type": "string",
          "x-go-custom-tag": "db:\"material_received_other\"",
          "x-nullable": true
        },
        "name_of_requestor": {
          "type": "string",
          "x-go-custom-tag": "db:\"name_of_requestor\"",
          "x-nullable": true
        },
        "non_uhn_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"non_uhn_id\"",
          "x-nullable": true
        },
        "other_identifier": {
          "type": "string",
          "x-go-custom-tag": "db:\"other_identifier\"",
          "x-nullable": true
        },
        "pb_bm_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"pb_bm_location\"",
          "x-nullable": true
        },
        "plasma_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"plasma_location\"",
          "x-nullable": true
        },
        "reviewed_by": {
          "type": "string",
          "x-go-custom-tag": "db:\"reviewed_by\"",
          "x-nullable": true
        },
        "rna_concentration": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"rna_concentration\"",
          "x-nullable": true
        },
        "rna_extraction_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"rna_extraction_date\"",
          "x-nullable": true
        },
        "rna_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"rna_location\"",
          "x-nullable": true
        },
        "rna_lysate_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"rna_lysate_location\"",
          "x-nullable": true
        },
        "rna_quality": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"rna_quality\"",
          "x-nullable": true
        },
        "rna_volume": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"rna_volume\"",
          "x-nullable": true
        },
        "rnase_p_date": {
          "type": "string",
          "x-go-custom-tag": "db:\"rnase_p_date\"",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_id\"",
          "x-nullable": true
        },
        "sample_name": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_name\"",
          "x-nullable": true
        },
        "sample_size": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_size\"",
          "x-nullable": true
        },
        "sample_type": {
          "type": "string",
          "x-go-custom-tag": "db:\"sample_type\"",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"se_num\"",
          "x-nullable": true
        },
        "study_id": {
          "type": "string",
          "x-go-custom-tag": "db:\"study_id\"",
          "x-nullable": true
        },
        "surgical_num": {
          "type": "string",
          "x-go-custom-tag": "db:\"surgical_num\"",
          "x-nullable": true
        },
        "test_requested": {
          "type": "string",
          "x-go-custom-tag": "db:\"test_requested\"",
          "x-nullable": true
        },
        "tumor_percnt_of_circled": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"tumor_percnt_of_circled\"",
          "x-nullable": true
        },
        "tumor_percnt_of_total": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"tumor_percnt_of_total\"",
          "x-nullable": true
        },
        "tumor_site": {
          "type": "string",
          "x-go-custom-tag": "db:\"tumor_site\"",
          "x-nullable": true
        },
        "volume_of_blood_marrow": {
          "type": "number",
          "format": "float",
          "x-go-custom-tag": "db:\"volume_of_blood_marrow\"",
          "x-nullable": true
        },
        "wbc_location": {
          "type": "string",
          "x-go-custom-tag": "db:\"wbc_location\"",
          "x-nullable": true
        }
      }
    }
  }
}`))
}
