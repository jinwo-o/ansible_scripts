package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Result result
// swagger:model Result
type Result struct {

	// failed regions
	FailedRegions *string `json:"results.failed_regions,omitempty" db:"results.failed_regions"`

	// mean depth of coveage
	MeanDepthOfCoveage *float32 `json:"results.mean_depth_of_coveage,omitempty" db:"results.mean_depth_of_coveage"`

	// mlpa pcr
	MlpaPcr *string `json:"results.mlpa_pcr,omitempty" db:"results.mlpa_pcr"`

	// mutation
	Mutation *string `json:"results.mutation,omitempty" db:"results.mutation"`

	// overall hotspots threshold
	OverallHotspotsThreshold *float32 `json:"results.overall_hotspots_threshold,omitempty" db:"results.overall_hotspots_threshold"`

	// overall quality threshold
	OverallQualityThreshold *float32 `json:"results.overall_quality_threshold,omitempty" db:"results.overall_quality_threshold"`

	// results id
	ResultsID *string `json:"results.results_id,omitempty" db:"results.results_id"`

	// uid
	UID *string `json:"results.uid,omitempty" db:"results.uid"`

	// verification pcr
	VerificationPcr *string `json:"results.verification_pcr,omitempty" db:"results.verification_pcr"`

	// experiment id
	ExperimentID *string `json:"results.experiment_id,omitempty" db:"results.experiment_id"`
}

// Validate validates this result
func (m *Result) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Result) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Result) UnmarshalBinary(b []byte) error {
	var res Result
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
